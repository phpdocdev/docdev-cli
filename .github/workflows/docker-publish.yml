
name: publishmultipledockerimage
# on:
#   push:
#     paths:
#       - 'php/**/Dockerfile'
on:
  push:
    branches: ['master']
      
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
#   changes:
#       runs-on: ubuntu-latest
#       outputs:
#         # Expose matched filters as job 'packages' output variable
#         packages: ${{ steps.filter.outputs.changes }}
#         packages_files: ${{ steps.filter.outputs.changes_files }}
#       steps:
#       # For pull requests it's not necessary to checkout the code
#       - uses: dorny/paths-filter@v2.10.2
#         id: filter
#         with:
#           filters: |
#              php: 
#               - 'php/**'
#           list-files: json
#       - run: echo '${{ toJson(steps.filter.outputs) }}' > changes.json
#       - id: changes
#         run: echo "::set-output name=list::$( jq '[ to_entries | .[] | select(.value == "true") | .key ]' changes.json -c )"
  setup:
#     needs: changes
    runs-on: ubuntu-latest
    strategy:
      matrix:
        TAGS: [54, 56, 72, 74, 81]
#         FILES: ${{ fromJSON(needs.changes.outputs.changes) }}
    outputs:
      matrix: ${{ steps.getfile.outputs.files }}
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            php:
              - 'php/**/Dockerfile'
            changed:
              - '**'
      -
        name: Set up Docker Buildx
        id: buildx
        uses: crazy-max/ghaction-docker-buildx@v3
        with:
          buildx-version: latest
          qemu-version: latest
      -
        name: Available platforms
        run: echo ${{ steps.buildx.outputs.changed_files }}
      -
        name: Available platforms
        run: echo ${{ steps.filter.outputs.changed }}
      -
        name: Available platforms
        run: echo ${{ steps.filter.outputs.php }}
      -
        name: Available platforms
        run: echo ${{ steps.filter.outputs.php_files }}
      -
        name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Set selected color
        run: echo ${{steps.filter.outputs.changed_files}}
#       -
#         name: Run Buildx
# #         if: ${{ steps.filter.outputs.php == 'true' }}
#         if: contains(fromJSON(steps.filter.outputs.changes), ${{ matrix.TAGS }})
#         run: |
#           docker buildx build \
#             -f php/${{ matrix.TAGS }}/Dockerfile \
#             php/. \
#             --platform linux/amd64,linux/arm64 \
#             --push --tag ghcr.io/phpdocdev/php:${{ matrix.TAGS }}
  other:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        TAGS: ["apache", "bind", "mailhog"]
    outputs:
      matrix: ${{ steps.getfile.outputs.files }}
    steps:
      - name: checkout
        uses: actions/checkout@v3
      -
        name: Set up Docker Buildx
        id: buildx
        uses: crazy-max/ghaction-docker-buildx@v3
        with:
          buildx-version: latest
          qemu-version: latest
      -
        name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}
      -
        name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Run Buildx
        run: |
          docker buildx build \
            -f ${{ matrix.TAGS }}/Dockerfile \
            ${{ matrix.TAGS }}/. \
            --platform linux/amd64,linux/arm64 \
            --push --tag ghcr.io/phpdocdev/${{ matrix.TAGS }}
          
